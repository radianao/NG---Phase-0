CREATE TABLE teachers(
  id integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  first_name varchar(25) NOT NULL,
  last_name varchar(50),
  school varchar(50) NOT NULL,
  hire_data date,
  salary numeric
  );
  
create table courses(
  id integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  name varchar(20),
  teachers_id INT,
  total_students INT
);
    
INSERT INTO teachers (first_name, last_name, school, hire_data, salary)
VALUES ('Janet', 'Smith', 'MIT', '2011-10-30', 36200),
       ('Lee', 'Reynolds', 'MIT', '1993-05-22', 65000),
       ('Samuel', 'Cole', 'Cambridge University', '2005-08-01', 43500),
       ('Samantha', 'Bush', 'Cambridge University', '2011-10-30', 36200),
       ('Betty', 'Diaz', 'Cambridge University', '2005-08-30', 43500),
       ('Kathleen', 'Roush', 'MIT', '2010-10-22', 38500),
       ('James', 'Diaz', 'Harvard University', '2003-07-18', 61000),
       ('Zack', 'Smith', 'Harvard University', '2000-12-29', 55500),
       ('Luis', 'Gonzales', 'Standford University', '2002-12-01', 50000),
       ('Frank', 'Abbers', 'Standford University', '1999-01-30', 66000);

INSERT INTO courses (name, teachers_id, total_students)
VALUES  ('Calculus', 2, 20),
        ('Physics', 2, 10),
        ('Calculus', 1, 30),
        ('Computer Science', 1, 20),
        ('Politic', 13, 15),
        ('Algebra', 2, 10),
        ('Algebra', 13, 30),
        ('Computer Science', 10, 35),
        ('Life Science', 11, 20),
        ('Chemistry', 9, 22),
        ('Chemistry', 8, 16),
        ('Calculus', 5, 19),
        ('Politic', 4, 17),
        ('Biology', 6, 22),
        ('Physics', 3, 29),
        ('Biology', 8, 28),
        ('Calculus', 12, 34),
        ('Physics', 13, 34),
        ('Biology', 14, 25),
        ('Calculus', 15, 20);
        
--Case 1.1 who is the teacher with the highest salary for each university
select first_name, last_name, school, hire_data, MAX(salary)
from teachers
GROUP BY school

--Case 1.2 who is the teacher with the highest salary from Standford
SELECT first_name, last_name, school, hire_data, MAX(salary)
from teachers
where school = 'Standford University';

--Case 2.1 Display all courses with teacher's identity
SELECT
	courses.id as course_id,
    name AS course_name,
    total_students,
    first_name AS lecturer,
    school
FROM courses
left JOIN teachers on courses.teachers_id = teachers.id
order BY courses.id ASC;

--Case 2.2 Display how many courses per universities
SELECT teachers.school, count(*) as total_course
from courses LEFT JOIN teachers
ON courses.teachers_id = teachers.id
group by teachers.school

--Case 2.3 Display how many total_sudents per teachers
SELECT
	teachers.id,
	teachers.first_name,
    teachers.last_name,
    sum(courses.total_students) as total_students_enrolled
from teachers
LEFT join courses on teachers.id = courses.teachers_id
GROUP BY teachers.id
ORDER BY teachers.id;

--2.4 Display how many courses per teachers
SELECT
	teachers.id, teachers.first_name, count(*) as total_courses
from courses JOIN
	 teachers
     on courses.teachers_id = teachers.id
     GROUP BY teachers.first_name
     order by teachers.id

-- count syntax usage from https://stackoverflow.com/questions/30836482/how-to-join-2-tables-with-select-and-count-in-single-query
--sum from https://learnsql.com/cookbook/how-to-sum-values-of-a-column-in-sql/